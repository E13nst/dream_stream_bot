#!/usr/bin/env python3
import redis
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.app
def load_env():
    env_vars = {}
    try:
        with open('.env.app', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    env_vars[key] = value
    except FileNotFoundError:
        print("–§–∞–π–ª .env.app –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return {}
    return env_vars

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
env = load_env()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis
try:
    r = redis.Redis(
        host=env.get('REDIS_HOST', 'localhost'),
        port=int(env.get('REDIS_PORT', 6379)),
        password=env.get('REDIS_PASSWORD', ''),
        ssl=True,  # –í–∫–ª—é—á–∞–µ–º SSL
        ssl_cert_reqs=None,  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        decode_responses=True
    )
    
    print(f"–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Redis: {env.get('REDIS_HOST')}:{env.get('REDIS_PORT')}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    response = r.ping()
    if response:
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis —É—Å–ø–µ—à–Ω–æ!")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
        print("\nüìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:")
        
        # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
        r.set('test_key', 'test_value', ex=60)  # TTL 60 —Å–µ–∫—É–Ω–¥
        print("‚úÖ –ó–∞–ø–∏—Å—å –≤ Redis: OK")
        
        # –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
        value = r.get('test_key')
        print(f"‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ Redis: {value}")
        
        # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
        r.delete('test_key')
        print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ Redis: OK")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Redis
        info = r.info()
        print(f"\nüìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Redis:")
        print(f"   –í–µ—Ä—Å–∏—è: {info.get('redis_version', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –ø–∞–º—è—Ç—å: {info.get('used_memory_human', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"   –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {info.get('connected_clients', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis.")
        
except redis.ConnectionError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis: {e}")
except redis.AuthenticationError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Redis: {e}")
except Exception as e:
    print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
