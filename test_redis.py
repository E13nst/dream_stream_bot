#!/usr/bin/env python3
import redis
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.app
def load_env():
    env_vars = {}
    try:
        with open('.env.app', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    env_vars[key] = value
    except FileNotFoundError:
        print("–§–∞–π–ª .env.app –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return {}
    return env_vars

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
env = load_env()

print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Redis:")
print(f"   Host: {env.get('REDIS_HOST', 'localhost')}")
print(f"   Port: {env.get('REDIS_PORT', 6379)}")
print(f"   Password: {'***' if env.get('REDIS_PASSWORD') else '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")

# –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
configs = [
    {
        "name": "–ë–µ–∑ SSL",
        "config": {
            "host": env.get('REDIS_HOST', 'localhost'),
            "port": int(env.get('REDIS_PORT', 6379)),
            "password": env.get('REDIS_PASSWORD', ''),
            "decode_responses": True
        }
    },
    {
        "name": "–° SSL (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞)",
        "config": {
            "host": env.get('REDIS_HOST', 'localhost'),
            "port": int(env.get('REDIS_PORT', 6379)),
            "password": env.get('REDIS_PASSWORD', ''),
            "ssl": True,
            "ssl_cert_reqs": None,
            "decode_responses": True
        }
    },
    {
        "name": "–° SSL (—Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)",
        "config": {
            "host": env.get('REDIS_HOST', 'localhost'),
            "port": int(env.get('REDIS_PORT', 6379)),
            "password": env.get('REDIS_PASSWORD', ''),
            "ssl": True,
            "decode_responses": True
        }
    }
]

for config_info in configs:
    print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É–µ–º: {config_info['name']}")
    try:
        r = redis.Redis(**config_info['config'])
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        response = r.ping()
        if response:
            print(f"‚úÖ {config_info['name']}: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
            print("   üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:")
            
            # –¢–µ—Å—Ç –∑–∞–ø–∏—Å–∏
            r.set('test_key', 'test_value', ex=60)  # TTL 60 —Å–µ–∫—É–Ω–¥
            print("   ‚úÖ –ó–∞–ø–∏—Å—å –≤ Redis: OK")
            
            # –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è
            value = r.get('test_key')
            print(f"   ‚úÖ –ß—Ç–µ–Ω–∏–µ –∏–∑ Redis: {value}")
            
            # –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è
            r.delete('test_key')
            print("   ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ Redis: OK")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Redis
            info = r.info()
            print(f"   üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Redis:")
            print(f"      –í–µ—Ä—Å–∏—è: {info.get('redis_version', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"      –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–∞—è –ø–∞–º—è—Ç—å: {info.get('used_memory_human', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"      –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã: {info.get('connected_clients', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            
            # –ï—Å–ª–∏ –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ—Ç –∫–æ–Ω—Ñ–∏–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç
            print(f"\nüéâ –†–ê–ë–û–ß–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø: {config_info['name']}")
            break
            
    except redis.ConnectionError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    except redis.AuthenticationError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
    except Exception as e:
        print(f"   ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
else:
    print(f"\n‚ùå –ù–∏ –æ–¥–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞!")
