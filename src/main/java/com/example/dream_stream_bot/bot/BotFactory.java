package com.example.dream_stream_bot.bot;

import com.example.dream_stream_bot.model.telegram.BotEntity;
import com.example.dream_stream_bot.service.telegram.MessageHandlerService;
import com.example.dream_stream_bot.service.telegram.UserStateService;
import com.example.dream_stream_bot.service.telegram.StickerSetService;
import com.example.dream_stream_bot.service.telegram.StickerService;

public class BotFactory {
    public static AbstractTelegramBot createBot(BotEntity botEntity, MessageHandlerService messageHandlerService,
                                              UserStateService userStateService, StickerSetService stickerSetService,
                                              StickerService stickerService) {
        String type = botEntity.getType();
        if (type == null) {
            throw new IllegalArgumentException("Bot type is not specified");
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        System.out.println("üîç BotFactory: –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Ç–∏–ø–∞: '" + type + "' (username: " + botEntity.getUsername() + ")");
        
        return switch (type.toLowerCase()) {
            case "copycat", "cotycat" -> new CopyCatBot(botEntity, messageHandlerService);
            case "assistant" -> new AssistantBot(botEntity, messageHandlerService);
            case "sticker" -> new StickerBot(botEntity, messageHandlerService, userStateService, stickerSetService, stickerService);
            // –î–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ —Ç–∏–ø—ã –±–æ—Ç–æ–≤ –∑–¥–µ—Å—å
            default -> {
                // Fallback: –µ—Å–ª–∏ —Ç–∏–ø –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω, –Ω–æ username —Å–æ–¥–µ—Ä–∂–∏—Ç "sticker", —Å–æ–∑–¥–∞–µ–º StickerBot
                if (botEntity.getUsername() != null && botEntity.getUsername().toLowerCase().contains("sticker")) {
                    System.out.println("üîÑ Fallback: –°–æ–∑–¥–∞–µ–º StickerBot –¥–ª—è username '" + botEntity.getUsername() + "' —Å —Ç–∏–ø–æ–º '" + type + "'");
                    yield new StickerBot(botEntity, messageHandlerService, userStateService, stickerSetService, stickerService);
                }
                throw new IllegalArgumentException("Unknown bot type: " + type + ". Supported types: copycat, assistant, sticker");
            }
        };
    }
} 